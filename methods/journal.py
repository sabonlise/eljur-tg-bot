from bs4 import BeautifulSoup
import requests
import re


def get_full_journal_week(session: requests.Session, week=0) -> list:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–Ω–µ–≤–Ω–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é,
       —É–∫–∞–∑–∞–Ω–Ω—É—é –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ week (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è)
       week = -1  –¥–Ω–µ–≤–Ω–∏–∫ –∑–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–µ–¥–µ–ª—é
       week = 1   –¥–Ω–µ–≤–Ω–∏–∫ –∑–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é"""
    if not week:
        journal_app = session.get('https://gym40.eljur.ru/journal-app')
    else:
        journal_app = session.get(f'https://gym40.eljur.ru/journal-app/week.{-int(week)}')
    soup = BeautifulSoup(journal_app.text, 'lxml')
    for br in soup.find_all('br'):
        br.replace_with('breakline_key')
    journal = soup.find('div', id='dnevnikDays').text.split()
    journal = [element.replace('breakline_key', '\n') for element in journal]
    return journal


def get_week_days(journal: list) -> list:
    return re.findall(r'\w+, \d{2}\.\d{2}', ' '.join(journal))


def get_lessons(full_journal: list) -> dict:
    journal = re.split(r'(\w+, \d{2}\.\d{2})', ' '.join(full_journal))
    lessons = {}
    del journal[0]
    journal = [day.strip() for day in journal]
    for day in range(len(journal)):
        try:
            homework = re.split(r'(?= \d\.[^\d])', journal[day + 1])
            homework = [hw.strip() for hw in homework]
            lessons[journal[day]] = homework
            del journal[day]
        except IndexError:
            pass
    return lessons


def save_formatted_schedule(match_day: str, schedule: dict) -> list:
    day = [day for day in schedule.keys() if match_day in day.lower().split(',')[0]][-1]
    output = [f'–ó–∞–¥–∞–Ω–∏—è –∑–∞ <b>{day.lower()}</b>:']
    lessons = schedule[day]
    if len(lessons) == 1:
        return output + [f'<b>{lessons[0]}</b>']
    else:
        for lesson in lessons:
            time = re.findall(r'\d\d:\d\d‚Äì\d\d:\d\d', lesson)
            # todo: —Ñ–∏–∫—Å –≤ —Å–ª—É—á–∞–µ –Ω–µ–ø—Ä–∞–∏–≤–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
            time = time[0] if time else ''
            lesson = lesson.replace('\n', '\n\t\t\t\t\t').\
                replace('–û–Ω–ª–∞–π–Ω-—É—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω', '').replace('–û–Ω–ª–∞–π–Ω-—É—Ä–æ–∫', '').split(' ')
            order = lesson[0]
            subject = lesson[2].capitalize()
            if len(lesson) in [4, 3] and lesson[1] == time:
                output.append(f'{order}\t   {subject}, {time}:  <b>–¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–µ—Ç!</b>')
            else:
                homework = ' '.join(lesson[3:])
                if lesson[3] == '—á–∞—Å' or lesson[3] == '—è–∑—ã–∫':
                    subject = f'{lesson[2].capitalize()} {lesson[3]}'
                    homework = ' '.join(lesson[4:])
                output.append(f'{order}\t   {subject}, {time}:\n'
                              f'\t    üìù  {homework}')
        return output
